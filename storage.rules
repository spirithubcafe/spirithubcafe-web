rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Allow anyone to read all files
    match /{allPaths=**} {
      allow read: if true;
    }
    
    // Allow authenticated users to upload product images
    match /products/{fileName} {
      allow write: if request.auth != null 
                   && request.resource.size < 10 * 1024 * 1024 // 10MB limit
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Allow authenticated users to upload category images
    match /categories/{fileName} {
      allow write: if request.auth != null 
                   && request.resource.size < 10 * 1024 * 1024 // 10MB limit
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Allow authenticated users to upload category videos
    match /videos/categories/{fileName} {
      allow write: if request.auth != null 
                   && request.resource.size < 50 * 1024 * 1024 // 50MB limit
                   && request.resource.contentType.matches('video/.*');
    }
    
    // Allow authenticated users to upload hero slides (images and videos)
    match /hero-slides/{fileName} {
      allow write: if request.auth != null 
                   && request.resource.size < 50 * 1024 * 1024 // 50MB limit for videos
                   && (request.resource.contentType.matches('image/.*') || 
                       request.resource.contentType.matches('video/.*'));
    }
    
    // Allow authenticated users full access to admin uploads
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // Allow all video uploads in videos folder
    match /videos/{allPaths=**} {
      allow read, write: if request.auth != null 
                        && request.resource.size < 100 * 1024 * 1024 // 100MB limit for videos
                        && request.resource.contentType.matches('video/.*');
    }
    
    // Fallback - allow authenticated users to upload to general uploads folder
    match /uploads/{allPaths=**} {
      allow read, write: if request.auth != null 
                        && request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
  }
}
